% operations arithmetiques de base1 + 12 * 31 / 33 ^2sqrt(9)9 ^0.5exp(1)log(exp(2))log10(10 ^3)log2(2 ^10)sin(90)sind(90)pisin(pi / 2)% definir une variabledeg2rad = pi/180; % regle de troissin(90 * deg2rad)% attention tout peut etre definipi = 2;rayon = 0.5;circonference = 2*pi*rayonclear picirconference = 2*pi*rayon% e.g.: i = sqrt(-1)% definir un vecteur ou une matrice de dimension (1,n)alpha_deg = [40 80 120 160 200 240 280 320 360];alpha_deg = [40:40:360];alpha_deg = [1:1:360]alpha_deg = [1:360];alpha_rad = alpha_deg * deg2rad% repeter une operation a l'aide d'une boucley = 0;ii = 0;for alpha = alpha_rad,    ii = ii+1;    y(ii) = sin(alpha);end% ou, plus simplement, en appliquant une operation directement a un vecteury = sin(alpha_rad);% representer les donnees d'un vecteur dans un diagramme de dispersion (scatter plot)figure, plot(y)figure, plot(alpha_deg, y, 'o-k')help plotxlabel('angle (deg)')ylabel('sin')title('A plot')% les donnees de 2 vecteursf1 = 1;f2 = 3;y1 = sin(f1*alpha_rad);y2 = sin(f2*alpha_rad);figure, plot(alpha_deg, y1, 'k', alpha_deg, y2, 'r')xlabel('angle (deg)')ylabel('sin')title('A plot')legend('freq = 1', 'freq = 3')% definir une matrice de dimension (m*n)b = [[1 2 3]; [4 5 6]; [7 8 9];];beye(3, 3)ones(3, 3)zeros(3, 3)c = rand(3, 3)% quelques operations matriciellesb + cb * cb .* cinv(c)c^2c.^2sqrt(c)% extraire une portion de matriceb(1:3,2:3)b(:,1)b(2,:)d = ones(3, 3)e = zeros(3, 3)petit_damier = ones(6, 6);petit_damier(1:3, 1:3) = e;petit_damier(4:6, 4:6) = e;petit_damier% un exemple de scriptnn = 50;                        % la largeur d'une casee = zeros(nn*2, nn*2);          petit_damier = ones(nn, nn);petit_damier(1:nn/2, 1:nn/2) = e;petit_damier(nn/2+1:nn, nn/2+1:nn) = e;figure, imshow(petit_damier)% Devoir : écrire un script (ou une fonction) qui dessine un grand_damier semblable au petit_damier de 2*N x 2*M cases en utilisant le petit_damier et des boucles.